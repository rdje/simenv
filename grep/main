#!bash
# ==========================================================================================
# Copyright (C) 2022 Richard DJE
#
# This file is part of simenv
#
# simenv is free software: you can redistribute it and/or modify it under the terms
# of the GNU General Public License as published by the Free Software Foundation, either 
# version 3 of the License, or any later version.
# 
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along with this program. 
# If not, see <https://www.gnu.org/licenses/>.
# ==========================================================================================


# Function: main
#
function main
{
  if (($# == 0)); then
    callsub $(get_subdir)/help
    return
  fi

  if [[ -d $(get_subdir)/$1 ]]; then
    local _sub=$1
    shift
    
    callsub $(get_subdir)/$_sub "$@"
    return
  fi

           
  for v in "$@"
  do
   if [[ $debug ]]; then echo "initial: <$v>"; fi
  done

  if [[ $debug ]]; then echo; fi

  # Collect the options and positional arguments
  opts=$(getopt -n simenv -a -o ihnRIsx:d: -l xf:,xd:,ad,add-directory: -- "$@")
  if (($? && $? < 4)); then
    callsub $(get_subdir)/help
    return
  fi


  eval set -- $opts

  for a
  do
    if [[ $debug ]]; then echo "getopt: <$a>"; fi
  done

  if [[ $debug ]]; then echo; fi

  local k=0
  while (($#))
  do
    if [[ $debug ]]; then echo -e "\e[31mk: $k  <$1>\e[0m"; fi
    case $1 in
      -x)
        for ext in $(echo $2 | sed 's/,/\n/g' | sed 's/^\.//')
        do
          if [[ $debug ]]; then echo "ext<$ext>"; fi

          extglobs[$((extglob_id))]=$ext
          ((extglob_id++))
        done

        shift 2
        ;;

      --xf)
        exclude_file $1 $2
        shift 2
        ;;

      --xd)
        exclude_dir $1 $2
        shift 2
        ;;

      -i)
        ignore_case=1;
        if [[ $debug ]]; then echo "ignore_case<1>"; fi
        shift;
        ;;

      -I)
        ignore_binary=1;
        if [[ $debug ]]; then echo "ignore_binary<1>"; fi
        shift;
        ;;

      -h)
        no_filename=1;
        if [[ $debug ]]; then echo "no_filename<1>"; fi
        shift;
        ;;

      -R)
        symlink_recurse=1;
        if [[ $debug ]]; then echo "symlink_recurse<1>"; fi
        shift;
        ;;

      -n)
        linenum=1;
        if [[ $debug ]]; then echo "linenum<1>"; fi
        shift;
        ;;

      -s)
        no_messages=1;
        if [[ $debug ]]; then echo "no_messages<1>"; fi
        shift;
        ;;

      --ad|--add-directory)  
        if ((k == 1)); then
          shift
          add_directory "$1"
          return
        fi
        ;;

      -d)
        sd=$2;
        shift 2;
        ;;

      --) end_of_options=1
          if [[ $debug ]]; then echo "########## End Of Options ##########"; fi
          shift
          ;;

      -*) echo -e "\e[1;31m-E-\e[0m Unknown option '\e[1;31m$1\e[0m'"
          callsub $(get_subdir)/help
          return
          ;;

      *)  params[$((posid))]=$1
          ((posid++))
          if [[ $debug ]]; then echo "positional parameter: <$1>"; fi
          shift
          ;;
    esac

    ((k++))
  done

  if (($(has_empty_dirlist) == 0)); then
    eval grep -E                        \
              --color=always            \
              ${ignore_case:+-i}        \
              ${ignore_binary:+-I}      \
              ${no_filename:+-h}        \
              ${no_messages:+-s}        \
              ${linenum:+-n}            \
              $(if ((symlink_recurse)); then echo -R; else echo -r; fi)         \
              $(for e in "${extglobs[@]}";  do echo "--exclude=*.'$e'"; done)   \
              $(for f in "${fileglobs[@]}"; do echo "--exclude='$f'"; done)     \
              $(for d in "${dirglobs[@]}";  do echo "--exclude-dir='$d'"; done) \
              $(for p in "${params[@]}";    do echo "-e '$p'"; done)            \
              $(cat_dirlist $sd)
  else
    echo -e "\e[1;31m-E-\e[0m No registered directory\n"
    echo Try
    callsub $(get_subdir)/add

  fi

}




# Function: exclude_file
#
function exclude_file
{
  _xfid=$((_xfid+1))

  local opt=$1
  local value=$2

  if [[ $value =~ ^[^,/]+(,[^,/]+)*$ ]]; then
    for file in $(echo $value | sed 's/,/ /g')
    do
      if [[ $debug ]]; then echo "file<$file>"; fi

      fileglobs[$((fileglob_id))]=$file
      ((fileglob_id++))
    done
  else
    case $_xfid in
      1) suffix=st;;
      2) suffix=nd;;
      3) suffix=rd;;
      *) suffix=th;;
    esac

    echo -e "\e[1;31m-E-\e[0m Syntax error with value '\e[1m$value\e[0m' of $_xfid$suffix '\e[1m$opt\e[0m' option"
    echo -e "\e[1m-I-\e[0m Probably due to the presence of '\e[1m/\e[0m's"
    exit 2
  fi
} # exclude_file


# Function: exclude_dir
#
function exclude_dir
{
  _xdid=$((_xdid+1))

  local opt=$1
  local value=$2

  if [[ $value =~ ^[^,/]+(,[^,/]+)*$ ]]; then
    for dir in $(echo $value | sed 's/,/ /g')
    do
      if [[ $debug ]]; then echo "dir<$dir>"; fi

      dirglobs[$((dirglob_id))]=$dir
      ((dirglob_id++))
    done
  else
    case $_xdid in
      1) suffix=st;;
      2) suffix=nd;;
      3) suffix=rd;;
      *) suffix=th;;
    esac

    echo -e "\e[1;31m-E-\e[0m Syntax error with value '\e[1m$value\e[0m' of $_xdid$suffix '\e[1m$opt\e[0m' option"
    echo -e "\e[1m-I-\e[0m Probably due to the presence of '\e[1m/\e[0m's"
    exit 2
  fi
} # exclude_dir


# Function: cat_dirlist
#
function cat_dirlist
{
  if [[ -s $(get_dirlist) ]]; then
    local id=$1

    cat $(get_dirlist) | if [[ -z $id ]]; then
      cat
    else
      if [[ $id =~ ^[[:alpha:]] ]]; then
        sed -rn '/^'$id'\>/p' 
      else
        nl -nln | sed -rn '/^'$id'\s/p'
      fi | sed -r 's#.*\s(/.*)$#\1#'
    fi
  fi
}


# Function: has_empty_dirlist
#
function has_empty_dirlist
{
  if [[ -s $(get_dirlist) ]]; then
    echo 0
  else
    echo 1 
  fi
}

this_local=$(get_local)
function get_dirlist
{
  echo $this_local/dirlist
}


main "$@"


